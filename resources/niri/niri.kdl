cursor {
  xcursor-theme "Capitaine Cursors (Gruvbox)"
  xcursor-size 32
  hide-after-inactive-ms 5000
}

overview {
  zoom 0.5
  backdrop-color "#0e0f03"
}

// Make the wallpaper stationary, rather than moving with workspaces.
layer-rule {
    match namespace="^wallpaper$"
    place-within-backdrop true
}

input {
  keyboard {
    xkb {
      layout "pl,plfi"
      options "caps:escape,grp:sclk_toggle"
    }

    repeat-delay 170
    repeat-rate 45
  }
  mouse {
    accel-speed -0.9
    accel-profile "flat"
  }
}

output "DP-3" {
  mode "1920x1080"
}

workspace "t"
workspace "b"
workspace "m"

layout {
  gaps 2


  // Make the wallpaper stationary, rather than moving with workspaces.
  background-color "transparent"
  // When to center a column when changing focus, options are:
  // - "never", default behavior, focusing an off-screen column will keep at the left
  //   or right edge of the screen.
  // - "always", the focused column will always be centered.
  // - "on-overflow", focusing a column will center it if it doesn't fit
  //   together with the previously focused column.
  center-focused-column "never"

  preset-column-widths {
    proportion 0.5
    proportion 1.0
  }

  preset-window-heights {
    proportion 0.5
    proportion 1.0
  }

  default-column-width { proportion 0.5; }

  focus-ring {
    width 2
    active-color "#7d8618"
    inactive-color "#00000000"
  }
}

spawn-at-startup "swaybg" "-m" "center" "-i" "/home/samsepi0l/.config/wallpaper.png"
spawn-at-startup "waybar-niri"
spawn-at-startup "alacritty"
spawn-at-startup "librewolf"
spawn-at-startup "vesktop"
environment {
  NIXOS_OZONE_WL "1"
  ELECTRON_OZONE_PLATFORM_HINT "auto"
  SDL_VIDEODRIVER "wayland"
  CLUTTER_BACKEND "wayland"
  QT_QPA_PLATFORM "wayland"
  ZSH_SYSTEM_CLIPBOARD_USE_WL_CLIPBOARD "1"
}

window-rule {
    match at-startup=true app-id="librewolf"
    open-on-workspace "b"
}

window-rule {
    match app-id="vesktop"
    open-on-workspace "m"
}

hotkey-overlay {
  skip-at-startup
}

prefer-no-csd

window-rule {
  match app-id=r#".*"#
  draw-border-with-background false
  open-maximized true
}

window-rule {
  match app-id=r#"Alacritty"#
  open-maximized false
}

window-rule {
  match app-id=r#"flameshot"#
  open-focused true
  open-floating true
  open-fullscreen true
}

window-rule {
  match app-id=r#"^org\.keepassxc\.KeePassXC$"#

  block-out-from "screen-capture"
}

window-rule {
    match app-id=r#"^Xdg-desktop-portal-gtk$"#
    open-floating true
}

window-rule {
    match app-id=r#"(firefox|LibreWolf)$"# title="^Picture-in-Picture$"
    open-floating true
}

window-rule {
    match app-id="steam" title=r#"^notificationtoasts_\d+_desktop$"#
    default-floating-position x=0 y=0 relative-to="bottom-right"
    open-focused false
    geometry-corner-radius 0
}

window-rule {
  match app-id=r#"^steam$"# title="^Steam$"
  match app-id=r#"^steam$"# title="^Sign in to Steam$"
  match app-id=r#"^steam$"# title="^Special Offers$"
  match app-id=r#"^steam$"# title="^Friends List$"
  open-on-workspace "4"
}

window-rule {
  match app-id=r#"^steam_app_[0-9]+$"#
  open-on-workspace "4"
  open-fullscreen true
}

binds {
  // Keys consist of modifiers separated by + signs, followed by an XKB key name
  // in the end. To find an XKB name for a particular key, you may use a program
  // like wev.
  Mod+Shift+Slash { show-hotkey-overlay; }

  Mod+Return hotkey-overlay-title="Terminal" { spawn "alacritty"; }
  Mod+Space hotkey-overlay-title="Rofi" { spawn "rofi" "-show" "drun"; }
  Mod+B hotkey-overlay-title="Browser" { spawn "librewolf"; }
  Mod+R hotkey-overlay-title="Recording" { spawn "hyprcorder.sh"; }

  XF86AudioRaiseVolume allow-when-locked=true { spawn "swayosd-client" "--output-volume" "+1"; }
  XF86AudioLowerVolume allow-when-locked=true { spawn "swayosd-client" "--output-volume" "-1"; }
  XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
  XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

  XF86MonBrightnessUp allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "+10%"; }
  XF86MonBrightnessDown allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "10%-"; }

  Mod+W repeat=false { toggle-overview; }

  Mod+Q repeat=false { close-window; }

  Mod+Left  { focus-column-left; }
  Mod+Down  { focus-window-down; }
  Mod+Up    { focus-window-up; }
  Mod+Right { focus-column-right; }
  Mod+H     { focus-column-left; }
  // Mod+J     { focus-window-down; }
  // Mod+K     { focus-window-up; }
  Mod+L     { focus-column-right; }

  Mod+Ctrl+Left  { move-column-left; }
  Mod+Ctrl+Down  { move-window-down; }
  Mod+Ctrl+Up    { move-window-up; }
  Mod+Ctrl+Right { move-column-right; }
  Mod+Ctrl+H     { move-column-left; }
  // Mod+Ctrl+J     { move-window-down; }
  // Mod+Ctrl+K     { move-window-up; }
  Mod+Ctrl+L     { move-column-right; }

  Mod+J     { focus-window-or-workspace-down; }
  Mod+K     { focus-window-or-workspace-up; }
  Mod+Ctrl+J     { move-window-down-or-to-workspace-down; }
  Mod+Ctrl+K     { move-window-up-or-to-workspace-up; }

  Mod+Home { focus-column-first; }
  Mod+End  { focus-column-last; }
  Mod+Ctrl+Home { move-column-to-first; }
  Mod+Ctrl+End  { move-column-to-last; }

  Mod+Shift+Left  { focus-monitor-left; }
  Mod+Shift+Down  { focus-monitor-down; }
  Mod+Shift+Up    { focus-monitor-up; }
  Mod+Shift+Right { focus-monitor-right; }
  Mod+Shift+H     { focus-monitor-left; }
  Mod+Shift+J     { focus-monitor-down; }
  Mod+Shift+K     { focus-monitor-up; }
  Mod+Shift+L     { focus-monitor-right; }

  Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
  Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
  Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
  Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
  Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
  Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
  Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
  Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }

  Mod+Page_Down      { focus-workspace-down; }
  Mod+Page_Up        { focus-workspace-up; }
  Mod+I              { focus-workspace-down; }
  Mod+O              { focus-workspace-up; }
  Mod+D              { focus-workspace-down; }
  Mod+A              { focus-workspace-up; }
  Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
  Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
  Mod+Ctrl+I         { move-column-to-workspace-down; }
  Mod+Ctrl+O         { move-column-to-workspace-up; }

  Mod+Shift+Page_Down { move-workspace-down; }
  Mod+Shift+Page_Up   { move-workspace-up; }
  Mod+Shift+I         { move-workspace-down; }
  Mod+Shift+O         { move-workspace-up; }

  Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
  Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
  Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
  Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

  Mod+WheelScrollRight      { focus-column-right; }
  Mod+WheelScrollLeft       { focus-column-left; }
  Mod+Ctrl+WheelScrollRight { move-column-right; }
  Mod+Ctrl+WheelScrollLeft  { move-column-left; }

  // Usually scrolling up and down with Shift in applications results in
  // horizontal scrolling; these binds replicate that.
  Mod+Shift+WheelScrollDown      { focus-column-right; }
  Mod+Shift+WheelScrollUp        { focus-column-left; }
  Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
  Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

  Mod+1 { focus-workspace "t"; }
  Mod+2 { focus-workspace "b"; }
  Mod+3 { focus-workspace "m"; }
  Mod+4 { focus-workspace 4; }
  Mod+5 { focus-workspace 5; }
  Mod+6 { focus-workspace 6; }
  Mod+7 { focus-workspace 7; }
  Mod+8 { focus-workspace 8; }
  Mod+9 { focus-workspace 9; }
  Mod+Shift+1 { move-column-to-workspace "t"; }
  Mod+Shift+2 { move-column-to-workspace "b"; }
  Mod+Shift+3 { move-column-to-workspace "m"; }
  Mod+Shift+4 { move-column-to-workspace 4; }
  Mod+Shift+5 { move-column-to-workspace 5; }
  Mod+Shift+6 { move-column-to-workspace 6; }
  Mod+Shift+7 { move-column-to-workspace 7; }
  Mod+Shift+8 { move-column-to-workspace 8; }
  Mod+Shift+9 { move-column-to-workspace 9; }

  // Alternatively, there are commands to move just a single window:
  // Mod+Ctrl+1 { move-window-to-workspace 1; }

  Mod+P { spawn "niri-switch-keyboard"; }

  // Switches focus between the current and the previous workspace.
  Alt+Tab { focus-workspace-previous; }

  // The following binds move the focused window in and out of a column.
  // If the window is alone, they will consume it into the nearby column to the side.
  // If the window is already in a column, they will expel it out.
  Mod+BracketLeft  { consume-or-expel-window-left; }
  Mod+BracketRight { consume-or-expel-window-right; }

  // Consume one window from the right to the bottom of the focused column.
  Mod+Comma  { consume-window-into-column; }
  // Expel the bottom window from the focused column to the right.
  Mod+Period { expel-window-from-column; }

  Mod+E { switch-preset-column-width; }
  Mod+Shift+E { switch-preset-window-height; }
  Mod+Ctrl+E { reset-window-height; }
  Mod+F { maximize-column; }
  Mod+Shift+F { fullscreen-window; }

  // Expand the focused column to space not taken up by other fully visible columns.
  // Makes the column "fill the rest of the space".
  Mod+Ctrl+F { expand-column-to-available-width; }

  Mod+C { center-column; }

  Mod+Ctrl+C { center-visible-columns; }

  Mod+Minus { set-column-width "-10%"; }
  Mod+Equal { set-column-width "+10%"; }

  Mod+Shift+Minus { set-window-height "-10%"; }
  Mod+Shift+Equal { set-window-height "+10%"; }

  Mod+V       { toggle-window-floating; }
  Mod+Shift+V { switch-focus-between-floating-and-tiling; }

  Mod+T { toggle-column-tabbed-display; }

  Print { spawn "flameshot" "gui"; }

  // Applications such as remote-desktop clients and software KVM switches may
  // request that niri stops processing the keyboard shortcuts defined here
  // so they may, for example, forward the key presses as-is to a remote machine.
  // It's a good idea to bind an escape hatch to toggle the inhibitor,
  // so a buggy application can't hold your session hostage.
  //
  // The allow-inhibiting=false property can be applied to other binds as well,
  // which ensures niri always processes them, even when an inhibitor is active.
  Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

  Ctrl+Alt+Delete { quit; }
}
